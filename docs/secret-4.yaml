openapi: 3.0.1
info:
  title: Open API for Secret Network. Contributed by SecrureSecrets.org.
  description: 'A REST interface for state queries, transaction generation and broadcasting.'
  version: '3.1'
servers:
  - url: https://spartan.secret.llc/
paths:
  /node_info:
    get:
      tags:
        - Secret Network REST
      summary: The properties of the connected node
      description: Information about the connected node
      operationId: get-node_info
      responses:
        '200':
          description: Node status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Node_infoGet200ApplicationJsonResponse'
        '500':
          description: Failed to query node status
          content:
            application/json: { }
  /syncing:
    get:
      tags:
        - Tendermint RPC
      summary: Syncing state of node
      description: Get if the node is currently syning with other nodes
      operationId: get-syncing
      responses:
        '200':
          description: Node syncing status
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SyncingGet200ApplicationJsonResponse'
        '500':
          description: Server internal error
          content:
            application/json: { }
  /blocks/latest:
    get:
      tags:
        - Tendermint RPC
      summary: Get the latest block
      description: Get the latest block
      operationId: get-blocks-latest
      responses:
        '200':
          description: The latest block
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockQuery'
        '500':
          description: Server internal error
          content:
            application/json: { }
  '/blocks/{height}':
    get:
      tags:
        - Tendermint RPC
      summary: Get a block at a certain height
      description: Get a block at a certain height
      operationId: get-blocks-height
      parameters:
        - name: height
          in: path
          description: Block height
          required: true
          schema:
            type: number
      responses:
        '200':
          description: The block at a specific height
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BlockQuery'
        '400':
          description: Invalid height
          content:
            application/json: { }
        '404':
          description: Request block height doesn't
          content:
            application/json: { }
        '500':
          description: Server internal error
          content:
            application/json: { }
  /validatorsets/latest:
    get:
      tags:
        - Tendermint RPC
      summary: Get the latest validator set
      description: Get the latest validator set
      operationId: get-validatorsets-latest
      responses:
        '200':
          description: The validator set at the latest block height
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatorsetsLatestGet200ApplicationJsonResponse'
        '500':
          description: Server internal error
          content:
            application/json: { }
  '/validatorsets/{height}':
    get:
      tags:
        - Tendermint RPC
      summary: Get a validator set a certain height
      description: Get a validator set a certain height
      operationId: get-validatorsets-height
      parameters:
        - name: height
          in: path
          description: Block height
          required: true
          schema:
            type: number
      responses:
        '200':
          description: The validator set at a specific block height
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatorsetsHeightGet200ApplicationJsonResponse'
        '400':
          description: Invalid height
          content:
            application/json: { }
        '404':
          description: Block at height not available
          content:
            application/json: { }
        '500':
          description: Server internal error
          content:
            application/json: { }
  '/txs/{hash}':
    get:
      tags:
        - Transactions
      summary: Get a Tx by hash
      description: Retrieve a transaction using its hash.
      operationId: get-txs-hash
      parameters:
        - name: hash
          in: path
          description: Tx hash
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Tx with the provided hash
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxQuery'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /txs:
    get:
      tags:
        - Transactions
      summary: Search transactions
      description: Search transactions by events.
      operationId: get-txs
      parameters:
        - name: message.action
          in: query
          description: 'transaction events such as ''message.action=send'' which results in the following endpoint: ''GET /txs?message.action=send''. note that each module documents its own events. look for xx_events.md in the corresponding cosmos-sdk/docs/spec directory'
          schema:
            type: string
        - name: message.sender
          in: query
          description: 'transaction tags with sender: ''GET /txs?message.action=send&message.sender=secret16xyempempp92x9hyzz9wrgf94r6j9h5f06pxxv'''
          schema:
            type: string
        - name: page
          in: query
          description: Page number
          schema:
            type: integer
        - name: limit
          in: query
          description: Maximum number of items per page
          schema:
            type: integer
        - name: tx.minheight
          in: query
          description: transactions on blocks with height greater or equal this value
          schema:
            type: integer
        - name: tx.maxheight
          in: query
          description: transactions on blocks with height less than or equal this value
          schema:
            type: integer
      responses:
        '200':
          description: All txs matching the provided events
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQueryTxs'
        '400':
          description: Invalid search events
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
    post:
      tags:
        - Transactions
      summary: Broadcast a signed tx
      description: Broadcast a signed tx to a full node
      operationId: post-txs
      requestBody:
        description: 'The tx must be a signed StdTx. The supported broadcast modes include `"block"`(return after tx commit), `"sync"`(return afer CheckTx) and `"async"`(return right away).'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TxBroadcast'
      responses:
        '200':
          description: Tx broadcasting result
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/BroadcastTxCommitResult'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /txs/encode:
    post:
      tags:
        - Transactions
      summary: Encode a transaction to the Amino wire format
      description: Encode a transaction (signed or not) from JSON to base64-encoded Amino serialized bytes
      operationId: post-txs-encode
      requestBody:
        description: The tx to encode
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tx'
      responses:
        '200':
          description: The tx was successfully decoded and re-encoded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TxsEncodePost200ApplicationJsonResponse'
        '400':
          description: The tx was malformated
          content:
            application/json: { }
        '500':
          description: Server internal error
          content:
            application/json: { }
  /txs/decode:
    post:
      tags:
        - Transactions
      summary: Decode a transaction from the Amino wire format
      description: Decode a transaction (signed or not) from base64-encoded Amino serialized bytes to JSON
      operationId: post-txs-decode
      requestBody:
        description: The tx to decode
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Tx-1'
      responses:
        '200':
          description: The tx was successfully decoded
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: The tx was malformated
          content:
            application/json: { }
        '500':
          description: Server internal error
          content:
            application/json: { }
  '/bank/balances/{address}':
    get:
      tags:
        - Bank
      summary: Get the account balances
      description: Get the account balances
      operationId: get-bank-balances-address
      parameters:
        - name: address
          in: path
          description: Account address in bech32 format
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account balances
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinArray'
        '500':
          description: Server internal error
          content:
            application/json: { }
  '/bank/accounts/{address}/transfers':
    post:
      tags:
        - Bank
      summary: Send coins from one account to another
      description: Send coins from one account to another
      operationId: post-bank-accounts-address-transfers
      parameters:
        - name: address
          in: path
          description: Account address in bech32 format
          required: true
          schema:
            type: string
      requestBody:
        description: The sender and tx information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Account'
      responses:
        '202':
          description: Tx was succesfully generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid request
          content:
            application/json: { }
        '500':
          description: Server internal error
          content:
            application/json: { }
  '/auth/accounts/{address}':
    get:
      tags:
        - Auth
      summary: Get the account information on blockchain
      description: Get the account information on blockchain
      operationId: get-auth-accounts-address
      parameters:
        - name: address
          in: path
          description: Account address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: Account information on the blockchain
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthAccountsAddressGet200ApplicationJsonResponse'
        '500':
          description: Server internel error
          content:
            application/json: { }
  '/staking/delegators/{delegatorAddr}/delegations':
    get:
      tags:
        - Staking
      summary: Get all delegations from a delegator
      description: Get all delegations from a delegator
      operationId: get-staking-delegators-delegatoraddr-delegations
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegationArray'
        '400':
          description: Invalid delegator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
    post:
      tags:
        - Staking
      summary: Submit delegation
      description: Submit delegation
      operationId: post-staking-delegators-delegatoraddr-delegations
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
      requestBody:
        description: The password of the account to remove from the KMS
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delegation-1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid delegator address or delegation request body
          content:
            application/json: { }
        '401':
          description: Key password is wrong
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/staking/delegators/{delegatorAddr}/delegations/{validatorAddr}':
    get:
      tags:
        - Staking
      summary: Query the current delegation between a delegator and a validator
      description: Query the current delegation between a delegator and a validator
      operationId: get-staking-delegators-delegatoraddr-delegations-validatoraddr
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
        - name: validatorAddr
          in: path
          description: Bech32 OperatorAddress of validator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Delegation'
        '400':
          description: Invalid delegator address or validator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/staking/delegators/{delegatorAddr}/unbonding_delegations':
    get:
      tags:
        - Staking
      summary: Get all unbonding delegations from a delegator
      description: Get all unbonding delegations from a delegator
      operationId: get-staking-delegators-delegatoraddr-unbonding_delegations
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbondingDelegationArray'
        '400':
          description: Invalid delegator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
    post:
      tags:
        - Staking
      summary: Submit an unbonding delegation
      description: Submit an unbonding delegation
      operationId: post-staking-delegators-delegatoraddr-unbonding_delegations
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
      requestBody:
        description: The password of the account to remove from the KMS
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delegation-2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid delegator address or unbonding delegation request body
          content:
            application/json: { }
        '401':
          description: Key password is wrong
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/staking/delegators/{delegatorAddr}/unbonding_delegations/{validatorAddr}':
    get:
      tags:
        - Staking
      summary: Query all unbonding delegations between a delegator and a validator
      description: Query all unbonding delegations between a delegator and a validator
      operationId: get-staking-delegators-delegatoraddr-unbonding_delegations-validatoraddr
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
        - name: validatorAddr
          in: path
          description: Bech32 OperatorAddress of validator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbondingDelegationPair'
        '400':
          description: Invalid delegator address or validator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /staking/redelegations:
    get:
      tags:
        - Staking
      summary: Get all redelegations (filter by query params)
      description: Get all redelegations (filter by query params)
      operationId: get-staking-redelegations
      parameters:
        - name: delegator
          in: query
          description: Bech32 AccAddress of Delegator
          schema:
            type: string
        - name: validator_from
          in: query
          description: Bech32 ValAddress of SrcValidator
          schema:
            type: string
        - name: validator_to
          in: query
          description: Bech32 ValAddress of DstValidator
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RedelegationArray'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/staking/delegators/{delegatorAddr}/redelegations':
    post:
      tags:
        - Staking
      summary: Submit a redelegation
      description: Submit a redelegation
      operationId: post-staking-delegators-delegatoraddr-redelegations
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
      requestBody:
        description: The sender and tx information
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Delegation-3'
      responses:
        '200':
          description: Tx was succesfully generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid delegator address or redelegation request body
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/staking/delegators/{delegatorAddr}/validators':
    get:
      tags:
        - Staking
      summary: Query all validators that a delegator is bonded to
      description: Query all validators that a delegator is bonded to
      operationId: get-staking-delegators-delegatoraddr-validators
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatorArray'
        '400':
          description: Invalid delegator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/staking/delegators/{delegatorAddr}/validators/{validatorAddr}':
    get:
      tags:
        - Staking
      summary: Query a validator that a delegator is bonded to
      description: Query a validator that a delegator is bonded to
      operationId: get-staking-delegators-delegatoraddr-validators-validatoraddr
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
        - name: validatorAddr
          in: path
          description: Bech32 ValAddress of Delegator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validator'
        '400':
          description: Invalid delegator address or validator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /staking/validators:
    get:
      tags:
        - Staking
      summary: Get all validator candidates. By default it returns only the bonded validators.
      description: Get all validator candidates. By default it returns only the bonded validators.
      operationId: get-staking-validators
      parameters:
        - name: status
          in: query
          description: 'The validator bond status. Must be either ''bonded'', ''unbonded'', or ''unbonding''.'
          schema:
            type: string
        - name: page
          in: query
          description: The page number.
          schema:
            type: integer
        - name: limit
          in: query
          description: The maximum number of items per page.
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatorArray'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/staking/validators/{validatorAddr}':
    get:
      tags:
        - Staking
      summary: Query the information from a single validator
      description: Query the information from a single validator
      operationId: get-staking-validators-validatoraddr
      parameters:
        - name: validatorAddr
          in: path
          description: Bech32 OperatorAddress of validator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Validator'
        '400':
          description: Invalid validator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/staking/validators/{validatorAddr}/delegations':
    get:
      tags:
        - Staking
      summary: Get all delegations from a validator
      description: Get all delegations from a validator
      operationId: get-staking-validators-validatoraddr-delegations
      parameters:
        - name: validatorAddr
          in: path
          description: Bech32 OperatorAddress of validator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegationArray'
        '400':
          description: Invalid validator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/staking/validators/{validatorAddr}/unbonding_delegations':
    get:
      tags:
        - Staking
      summary: Get all unbonding delegations from a validator
      description: Get all unbonding delegations from a validator
      operationId: get-staking-validators-validatoraddr-unbonding_delegations
      parameters:
        - name: validatorAddr
          in: path
          description: Bech32 OperatorAddress of validator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UnbondingDelegationArray'
        '400':
          description: Invalid validator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /staking/pool:
    get:
      tags:
        - Staking
      summary: Get the current state of the staking pool
      description: Get the current state of the staking pool
      operationId: get-staking-pool
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakingPoolGet200ApplicationJsonResponse'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /staking/parameters:
    get:
      tags:
        - Staking
      summary: Get the current staking parameter values
      description: Get the current staking parameter values
      operationId: get-staking-parameters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StakingParametersGet200ApplicationJsonResponse'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /slashing/signing_infos:
    get:
      tags:
        - Slashing
      summary: Get sign info of given all validators
      description: Get sign info of all validators
      operationId: get-slashing-signing_infos-page-page-limit-limit
      parameters:
        - name: page
          in: query
          description: Page number
          required: true
          schema:
            type: integer
        - name: limit
          in: query
          description: Maximum number of items per page
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SigningInfoArray'
        '400':
          description: Invalid validator public key for one of the validators
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/slashing/validators/{validatorAddr}/unjail':
    post:
      tags:
        - Slashing
      summary: Unjail a jailed validator
      description: Send transaction to unjail a jailed validator
      operationId: post-slashing-validators-validatoraddr-unjail
      parameters:
        - name: validatorAddr
          in: path
          description: Bech32 validator address
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UnjailBody'
      responses:
        '200':
          description: Tx was succesfully generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid validator address or base_req
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /slashing/parameters:
    get:
      tags:
        - Slashing
      summary: Get the current slashing parameters
      description: Get the current slashing parameters
      operationId: get-slashing-parameters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SlashingParametersGet200ApplicationJsonResponse'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /gov/proposals:
    post:
      tags:
        - Governance
      summary: Submit a proposal
      description: Send transaction to submit a proposal
      operationId: post-gov-proposals
      requestBody:
        description: 'valid value of `"proposal_type"` can be `"text"`, `"parameter_change"`, `"software_upgrade"`'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post_proposal_body'
      responses:
        '200':
          description: Tx was succesfully generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid proposal body
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
    get:
      tags:
        - Governance
      summary: Query proposals
      description: Query proposals information with parameters
      operationId: get-gov-proposals
      parameters:
        - name: voter
          in: query
          description: voter address
          schema:
            type: string
        - name: depositor
          in: query
          description: depositor address
          schema:
            type: string
        - name: status
          in: query
          description: 'proposal status, valid values can be `"deposit_period"`, `"voting_period"`, `"passed"`, `"rejected"`'
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextProposalArray'
        '400':
          description: Invalid query parameters
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /gov/proposals/param_change:
    post:
      tags:
        - Governance
      summary: Generate a parameter change proposal transaction
      description: Generate a parameter change proposal transaction
      operationId: post-gov-proposals-param_change
      requestBody:
        description: The parameter change proposal body that contains all parameter changes
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post_proposal_body-1'
      responses:
        '200':
          description: The transaction was succesfully generated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid proposal body
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/gov/proposals/{proposalId}':
    get:
      tags:
        - Governance
      summary: Query a proposal
      description: Query a proposal by id
      operationId: get-gov-proposals-proposalid
      parameters:
        - name: proposalId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TextProposal'
        '400':
          description: Invalid proposal id
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/gov/proposals/{proposalId}/proposer':
    get:
      tags:
        - Governance
      summary: Query proposer
      description: Query for the proposer for a proposal
      operationId: get-gov-proposals-proposalid-proposer
      parameters:
        - name: proposalId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Proposer'
        '400':
          description: Invalid proposal ID
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/gov/proposals/{proposalId}/deposits':
    get:
      tags:
        - Governance
      summary: Query deposits
      description: Query deposits by proposalId
      operationId: get-gov-proposals-proposalid-deposits
      parameters:
        - name: proposalId
          in: path
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DepositArray'
        '400':
          description: Invalid proposal id
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
    post:
      tags:
        - Governance
      summary: Deposit tokens to a proposal
      description: Send transaction to deposit tokens to a proposal
      operationId: post-gov-proposals-proposalid-deposits
      parameters:
        - name: proposalId
          in: path
          description: proposal id
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post_deposit_body'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid proposal id or deposit body
          content:
            application/json: { }
        '401':
          description: Key password is wrong
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/gov/proposals/{proposalId}/deposits/{depositor}':
    get:
      tags:
        - Governance
      summary: Query deposit
      description: Query deposit by proposalId and depositor address
      operationId: get-gov-proposals-proposalid-deposits-depositor
      parameters:
        - name: proposalId
          in: path
          description: proposal id
          required: true
          schema:
            type: string
        - name: depositor
          in: path
          description: Bech32 depositor address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Deposit'
        '400':
          description: Invalid proposal id or depositor address
          content:
            application/json: { }
        '404':
          description: Found no deposit
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/gov/proposals/{proposalId}/votes':
    get:
      tags:
        - Governance
      summary: Query voters
      description: Query voters information by proposalId
      operationId: get-gov-proposals-proposalid-votes
      parameters:
        - name: proposalId
          in: path
          description: proposal id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VoteArray'
        '400':
          description: Invalid proposal id
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
    post:
      tags:
        - Governance
      summary: Vote a proposal
      description: Send transaction to vote a proposal
      operationId: post-gov-proposals-proposalid-votes
      parameters:
        - name: proposalId
          in: path
          description: proposal id
          required: true
          schema:
            type: string
      requestBody:
        description: 'valid value of `"option"` field can be `"yes"`, `"no"`, `"no_with_veto"` and `"abstain"`'
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post_vote_body'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid proposal id or vote body
          content:
            application/json: { }
        '401':
          description: Key password is wrong
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/gov/proposals/{proposalId}/votes/{voter}':
    get:
      tags:
        - Governance
      summary: Query vote
      description: Query vote information by proposal Id and voter address
      operationId: get-gov-proposals-proposalid-votes-voter
      parameters:
        - name: proposalId
          in: path
          description: proposal id
          required: true
          schema:
            type: string
        - name: voter
          in: path
          description: Bech32 voter address
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Vote'
        '400':
          description: Invalid proposal id or voter address
          content:
            application/json: { }
        '404':
          description: Found no vote
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/gov/proposals/{proposalId}/tally':
    get:
      tags:
        - Governance
      summary: Get a proposal's tally result at the current time
      description: Gets a proposal's tally result at the current time. If the proposal is pending deposits (i.e status 'DepositPeriod') it returns an empty tally result.
      operationId: get-gov-proposals-proposalid-tally
      parameters:
        - name: proposalId
          in: path
          description: proposal id
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TallyResult'
        '400':
          description: Invalid proposal id
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /gov/parameters/deposit:
    get:
      tags:
        - Governance
      summary: Query governance deposit parameters
      description: Query governance deposit parameters. The max_deposit_period units are in nanoseconds.
      operationId: get-gov-parameters-deposit
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GovParametersDepositGet200ApplicationJsonResponse'
        '400':
          description: <other_path> is not a valid query request path
          content:
            application/json: { }
        '404':
          description: Found no deposit parameters
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /gov/parameters/tallying:
    get:
      tags:
        - Governance
      summary: Query governance tally parameters
      description: Query governance tally parameters
      operationId: get-gov-parameters-tallying
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GovParametersTallyingGet200ApplicationJsonResponse'
        '400':
          description: <other_path> is not a valid query request path
          content:
            application/json: { }
        '404':
          description: Found no tally parameters
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /gov/parameters/voting:
    get:
      tags:
        - Governance
      summary: Query governance voting parameters
      description: Query governance voting parameters. The voting_period units are in nanoseconds.
      operationId: get-gov-parameters-voting
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/GovParametersVotingGet200ApplicationJsonResponse'
        '400':
          description: <other_path> is not a valid query request path
          content:
            application/json: { }
        '404':
          description: Found no voting parameters
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/distribution/delegators/{delegatorAddr}/rewards':
    get:
      tags:
        - Distribution
      summary: Get the total rewards balance from all delegations
      description: Get the sum of all the rewards earned by delegations by a single delegator
      operationId: get-distribution-delegators-delegatoraddr-rewards
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DelegatorTotalRewards'
        '400':
          description: Invalid delegator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
    post:
      tags:
        - Distribution
      summary: Withdraw all the delegator's delegation rewards
      description: Withdraw all the delegator's delegation rewards
      operationId: post-distribution-delegators-delegatoraddr-rewards
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Withdraw-request-body'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid delegator address
          content:
            application/json: { }
        '401':
          description: Key password is wrong
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/distribution/delegators/{delegatorAddr}/rewards/{validatorAddr}':
    get:
      tags:
        - Distribution
      summary: Query a delegation reward
      description: Query a single delegation reward by a delegator
      operationId: get-distribution-delegators-delegatoraddr-rewards-validatoraddr
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
        - name: validatorAddr
          in: path
          description: Bech32 OperatorAddress of validator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinArray'
        '400':
          description: Invalid delegator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
    post:
      tags:
        - Distribution
      summary: Withdraw a delegation reward
      description: Withdraw a delegator's delegation reward from a single validator
      operationId: post-distribution-delegators-delegatoraddr-rewards-validatoraddr
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
        - name: validatorAddr
          in: path
          description: Bech32 OperatorAddress of validator
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Withdraw-request-body-1'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid delegator address or delegation body
          content:
            application/json: { }
        '401':
          description: Key password is wrong
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/distribution/delegators/{delegatorAddr}/withdraw_address':
    get:
      tags:
        - Distribution
      summary: Get the rewards withdrawal address
      description: Get the delegations' rewards withdrawal address. This is the address in which the user will receive the reward funds
      operationId: get-distribution-delegators-delegatoraddr-withdraw_address
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Address'
        '400':
          description: Invalid delegator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
    post:
      tags:
        - Distribution
      summary: Replace the rewards withdrawal address
      description: Replace the delegations' rewards withdrawal address for a new one.
      operationId: post-distribution-delegators-delegatoraddr-withdraw_address
      parameters:
        - name: delegatorAddr
          in: path
          description: Bech32 AccAddress of Delegator
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Withdraw-request-body-2'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid delegator or withdraw address
          content:
            application/json: { }
        '401':
          description: Key password is wrong
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/distribution/validators/{validatorAddr}':
    get:
      tags:
        - Distribution
      summary: Validator distribution information
      description: Query the distribution information of a single validator
      operationId: get-distribution-validators-validatoraddr
      parameters:
        - name: validatorAddr
          in: path
          description: Bech32 OperatorAddress of validator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValidatorDistInfo'
        '400':
          description: Invalid validator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/distribution/validators/{validatorAddr}/outstanding_rewards':
    get:
      tags:
        - Distribution
      summary: Fee distribution outstanding rewards of a single validator
      description: Fee distribution outstanding rewards of a single validator
      operationId: get-distribution-validators-validatoraddr-outstanding_rewards
      parameters:
        - name: validatorAddr
          in: path
          description: Bech32 OperatorAddress of validator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinArray'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/distribution/validators/{validatorAddr}/rewards':
    get:
      tags:
        - Distribution
      summary: Commission and self-delegation rewards of a single validator
      description: Query the commission and self-delegation rewards of validator.
      operationId: get-distribution-validators-validatoraddr-rewards
      parameters:
        - name: validatorAddr
          in: path
          description: Bech32 OperatorAddress of validator
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinArray'
        '400':
          description: Invalid validator address
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
    post:
      tags:
        - Distribution
      summary: Withdraw the validator's rewards
      description: Withdraw the validator's self-delegation and commissions rewards
      operationId: post-distribution-validators-validatoraddr-rewards
      parameters:
        - name: validatorAddr
          in: path
          description: Bech32 OperatorAddress of validator
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Withdraw-request-body-3'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Invalid validator address
          content:
            application/json: { }
        '401':
          description: Key password is wrong
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /distribution/community_pool:
    get:
      tags:
        - Distribution
      summary: Community pool parameters
      description: Community pool parameters
      operationId: get-distribution-community_pool
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CoinArray'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /distribution/parameters:
    get:
      tags:
        - Distribution
      summary: Fee distribution parameters
      description: Fee distribution parameters
      operationId: get-distribution-parameters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DistributionParametersGet200ApplicationJsonResponse'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /minting/parameters:
    get:
      tags:
        - Mint
      summary: Minting module parameters
      description: Minting module parameters
      operationId: get-minting-parameters
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MintingParametersGet200ApplicationJsonResponse'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /minting/inflation:
    get:
      tags:
        - Mint
      summary: Current minting inflation value
      description: Current minting inflation value
      operationId: get-minting-inflation
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MintingInflationGet200ApplicationJsonResponse'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /minting/annual-provisions:
    get:
      tags:
        - Mint
      summary: Current minting annual provisions value
      description: Current minting annual provisions value
      operationId: get-minting-annual-provisions
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MintingAnnual-provisionsGet200ApplicationJsonResponse'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /supply/total:
    get:
      tags:
        - Supply
      summary: Total supply of coins in the chain
      description: Total supply of coins in the chain
      operationId: get-supply-total
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Supply'
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/supply/total/{denomination}':
    get:
      tags:
        - Supply
      summary: Total supply of a single coin denomination
      description: Total supply of a single coin denomination
      operationId: get-supply-total-denomination
      parameters:
        - name: denomination
          in: path
          description: Coin denomination
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SupplyTotalDenominationGet200ApplicationJsonResponse'
        '400':
          description: Invalid coin denomination
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  /wasm/code:
    post:
      tags:
        - Wasm
      summary: Generate wasm store code message
      description: Generate wasm store code message
      operationId: post-wasm-code
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StoreCodeReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Bad request
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
    get:
      tags:
        - Wasm
      summary: List code info
      description: List code info
      operationId: get-wasm-code
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasmCodeGet200ApplicationJsonResponse'
  '/wasm/code/{codeID}':
    post:
      tags:
        - Wasm
      summary: Instantiate wasm contract message
      description: Instantiate wasm contract message
      operationId: post-wasm-code-codeid
      parameters:
        - name: codeID
          in: path
          description: code ID you want to instantiate
          required: true
          schema:
            type: number
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/InstantiateContractReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Bad request
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
    get:
      tags:
        - Wasm
      summary: Get code info of the code ID
      description: Get code info of the code ID
      operationId: get-wasm-code-codeid
      parameters:
        - name: codeID
          in: path
          description: code ID you want to query
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasmCodeCodeIDGet200ApplicationJsonResponse'
  '/wasm/code/{codeID}/contracts':
    get:
      tags:
        - Wasm
      summary: Get info about all contracts deployed with a code ID
      description: Get info about all contracts deployed with a code ID
      operationId: get-wasm-code-codeid-contracts
      parameters:
        - name: codeID
          in: path
          description: code ID you want to query
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasmCodeCodeIDContractsGet200ApplicationJsonResponse'
  '/wasm/contract/{contractAddress}':
    post:
      tags:
        - Wasm
      summary: Execute wasm contract message
      description: Execute wasm contract message
      operationId: post-wasm-contract-contractaddress
      parameters:
        - name: contractAddress
          in: path
          description: contract address you want to execute
          required: true
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExecuteContractReq'
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StdTx'
        '400':
          description: Bad request
          content:
            application/json: { }
        '500':
          description: Internal Server Error
          content:
            application/json: { }
  '/wasm/contract/{contractAddress}/code-hash':
    get:
      tags:
        - Wasm
      summary: Get stored contract-hash information
      description: Get stored contract-hash information
      operationId: get-wasm-contract-contractaddress-code-hash-query_msg-query_msg
      parameters:
        - name: contractAddress
          in: path
          description: contract address you want to lookup
          required: true
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasmContractContractAddressCode-hashGet200ApplicationJsonResponse'
  '/wasm/contract/{contractAddress}/query/{query}':
    get:
      tags:
        - Wasm
      summary: Get stored information with store key
      description: Get stored information with store key
      operationId: get-wasm-contract-contractaddress-query-query
      parameters:
        - name: contractAddress
          in: path
          description: contract address you want to lookup
          required: true
          schema:
            type: string
        - name: query
          in: path
          description: hex encoded data for the query
          required: true
          schema:
            type: string
        - name: encoding
          in: query
          description: encoding of the query data (only hex supported)
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasmContractContractAddressQueryQueryGet200ApplicationJsonResponse'
  '/wasm/code/{codeID}/hash':
    get:
      tags:
        - Wasm
      summary: Get code ID data hash
      description: Get code ID data hash
      operationId: get-wasm-code-codeid-hash
      parameters:
        - name: codeID
          in: path
          description: code ID you want to query
          required: true
          schema:
            type: number
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/WasmCodeCodeIDHashGet200ApplicationJsonResponse'
        '404':
          description: Not Found
          content:
            application/json: { }
  /reg/consensus-io-exch-pubkey:
    get:
      tags:
        - Reg
      summary: Get chain public key
      description: Get chain public key
      operationId: consensus-io-exch-pubkey
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/IoExchPubkeyResponse'
        '404':
          description: Not Found
          content:
            application/json: { }
components:
  schemas:
    IoExchPubkeyResponse:
      type: object
      properties:
        height:
          type: string
        result:
          type: object
          properties:
            ioExchPubkey:
              type: string
    CodeIdContracts:
      type: object
      properties:
        height:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/ListContractSingle'
    ListContractSingle:
      type: object
      properties:
        code-id:
          type: number
        creator:
          type: string
        label:
          type: string
        address:
          type: string
    ListCodeReponse:
      type: object
      properties:
        height:
          type: string
        result:
          type: array
          items:
            $ref: '#/components/schemas/ListCodeSingle'
    ListCodeSingle:
      type: object
      properties:
        id:
          type: number
        creator:
          type: string
        data_hash:
          type: string
        source:
          type: string
        builder:
          type: string
    CodeHash:
      type: object
      properties:
        height:
          type: string
        result:
          type: string
    CodeInfo:
      type: object
      properties:
        code_hash:
          type: string
        creator:
          type: string
    StoreCodeReq:
      type: object
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        wasm_bytes:
          type: string
          example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
    InstantiateContractReq:
      type: object
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        init_coins:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        init_msg:
          type: string
          description: json formatted string
          example: '{}'
    ExecuteContractReq:
      type: object
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        coins:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        exec_msg:
          type: string
          example: '{}'
    CheckTxResult:
      type: object
      properties:
        code:
          type: integer
        data:
          type: string
        gas_used:
          type: integer
        gas_wanted:
          type: integer
        info:
          type: string
        log:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/KVPair'
      example:
        code: 0
        data: data
        log: log
        gas_used: 5000
        gas_wanted: 10000
        info: info
        tags:
          - ''
          - ''
    DeliverTxResult:
      type: object
      properties:
        code:
          type: integer
        data:
          type: string
        gas_used:
          type: integer
        gas_wanted:
          type: integer
        info:
          type: string
        log:
          type: string
        tags:
          type: array
          items:
            $ref: '#/components/schemas/KVPair'
      example:
        code: 5
        data: data
        log: log
        gas_used: 5000
        gas_wanted: 10000
        info: info
        tags:
          - ''
          - ''
    BroadcastTxCommitResult:
      type: object
      properties:
        check_tx:
          $ref: '#/components/schemas/CheckTxResult'
        deliver_tx:
          $ref: '#/components/schemas/DeliverTxResult'
        hash:
          $ref: '#/components/schemas/Hash'
        height:
          type: integer
    KVPair:
      type: object
      properties:
        key:
          type: string
        value:
          type: string
    Msg:
      type: string
    Address:
      type: string
      description: bech32 encoded address
      example: secret1depk54cuajgkzea6zpgkq36tnjwdzv4afc3d27
    ValidatorAddress:
      type: string
      description: bech32 encoded address
      example: secretvaloper16xyempempp92x9hyzz9wrgf94r6j9h5f2w4n2l
    Coin:
      type: object
      properties:
        denom:
          type: string
          example: stake
        amount:
          type: string
          example: '50'
    Hash:
      type: string
      example: EE5F3404034C524501629B56E0DDC38FAD651F04
    TxQuery:
      type: object
      properties:
        hash:
          type: string
          example: D085138D913993919295FF4B0A9107F1F2CDE0D37A87CE0644E217CBF3B49656
        height:
          type: number
          example: 368
        tx:
          $ref: '#/components/schemas/StdTx'
        result:
          type: object
          properties:
            log:
              type: string
            gas_wanted:
              type: string
              example: '200000'
            gas_used:
              type: string
              example: '26354'
            tags:
              type: array
              items:
                $ref: '#/components/schemas/KVPair'
    PaginatedQueryTxs:
      type: object
      properties:
        total_count:
          type: number
          example: 1
        count:
          type: number
          example: 1
        page_number:
          type: number
          example: 1
        page_total:
          type: number
          example: 1
        limit:
          type: number
          example: 30
        txs:
          type: array
          items:
            $ref: '#/components/schemas/TxQuery'
    StdTx:
      type: object
      properties:
        msg:
          type: array
          items:
            $ref: '#/components/schemas/Msg'
        fee:
          type: object
          properties:
            gas:
              type: string
            amount:
              type: array
              items:
                $ref: '#/components/schemas/Coin'
        memo:
          type: string
        signatures:
          type: array
          items:
            type: object
            properties:
              signature:
                type: string
                example: MEUCIQD02fsDPra8MtbRsyB1w7bqTM55Wu138zQbFcWx4+CFyAIge5WNPfKIuvzBZ69MyqHsqD8S1IwiEp+iUb6VSdtlpgY=
              pub_key:
                type: object
                properties:
                  type:
                    type: string
                    example: tendermint/PubKeySecp256k1
                  value:
                    type: string
                    example: Avz04VhtKJh8ACCVzlI8aTosGy0ikFXKIVHQ3jKMrosH
              account_number:
                type: string
                example: '0'
              sequence:
                type: string
                example: '0'
    BlockID:
      type: object
      properties:
        hash:
          $ref: '#/components/schemas/Hash'
        parts:
          type: object
          properties:
            total:
              type: number
              example: 0
            hash:
              $ref: '#/components/schemas/Hash'
    BlockHeader:
      type: object
      properties:
        chain_id:
          type: string
          example: secret-3
        height:
          type: number
          example: 1
        time:
          type: string
          example: '2017-12-30T04:53:09.287+00:00'
        num_txs:
          type: number
          example: 0
        last_block_id:
          $ref: '#/components/schemas/BlockID'
        total_txs:
          type: number
          example: 35
        last_commit_hash:
          $ref: '#/components/schemas/Hash'
        data_hash:
          $ref: '#/components/schemas/Hash'
        validators_hash:
          $ref: '#/components/schemas/Hash'
        next_validators_hash:
          $ref: '#/components/schemas/Hash'
        consensus_hash:
          $ref: '#/components/schemas/Hash'
        app_hash:
          $ref: '#/components/schemas/Hash'
        last_results_hash:
          $ref: '#/components/schemas/Hash'
        evidence_hash:
          $ref: '#/components/schemas/Hash'
        proposer_address:
          $ref: '#/components/schemas/Address'
        version:
          type: object
          properties:
            block:
              type: string
              example: '10'
            app:
              type: string
              example: '0'
    Block:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/BlockHeader'
        txs:
          type: array
          items:
            type: string
        evidence:
          type: array
          items:
            type: string
        last_commit:
          type: object
          properties:
            block_id:
              $ref: '#/components/schemas/BlockID'
            precommits:
              type: array
              items:
                type: object
                properties:
                  validator_address:
                    type: string
                  validator_index:
                    type: string
                    example: '0'
                  height:
                    type: string
                    example: '0'
                  round:
                    type: string
                    example: '0'
                  timestamp:
                    type: string
                    example: '2017-12-30T04:53:09.287+00:00'
                  type:
                    type: number
                    example: 2
                  block_id:
                    $ref: '#/components/schemas/BlockID'
                  signature:
                    type: string
                    example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
    BlockQuery:
      type: object
      properties:
        block_meta:
          type: object
          properties:
            header:
              $ref: '#/components/schemas/BlockHeader'
            block_id:
              $ref: '#/components/schemas/BlockID'
        block:
          $ref: '#/components/schemas/Block'
    DelegationDelegatorReward:
      type: object
      properties:
        validator_address:
          $ref: '#/components/schemas/ValidatorAddress'
        reward:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
    DelegatorTotalRewards:
      type: object
      properties:
        rewards:
          type: array
          items:
            $ref: '#/components/schemas/DelegationDelegatorReward'
        total:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
    BaseReq:
      type: object
      properties:
        from:
          type: string
          description: Sender address or Keybase name to generate a transaction
          example: secret1g9ahr6xhht5rmqven628nklxluzyv8z9jqjcmc
        memo:
          type: string
          example: Sent via SecretAPI.io
        chain_id:
          type: string
          example: secret-3
        account_number:
          type: string
          example: '0'
        sequence:
          type: string
          example: '1'
        gas:
          type: string
          example: '200000'
        gas_adjustment:
          type: string
          example: '1.2'
        fees:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        simulate:
          type: boolean
          description: Estimate gas for a transaction (cannot be used in conjunction with generate_only)
          example: false
    TendermintValidator:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/ValidatorAddress'
        pub_key:
          type: string
          example: secretvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
        voting_power:
          type: string
          example: '1000'
        proposer_priority:
          type: string
          example: '1000'
    TextProposal:
      type: object
      properties:
        proposal_id:
          type: integer
        title:
          type: string
        description:
          type: string
        proposal_type:
          type: string
        proposal_status:
          type: string
        final_tally_result:
          $ref: '#/components/schemas/TallyResult'
        submit_time:
          type: string
        total_deposit:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        voting_start_time:
          type: string
    Proposer:
      type: object
      properties:
        proposal_id:
          type: string
        proposer:
          type: string
    Deposit:
      type: object
      properties:
        amount:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        proposal_id:
          type: string
        depositor:
          $ref: '#/components/schemas/Address'
    TallyResult:
      type: object
      properties:
        yes:
          type: string
          example: '0.0000000000'
        abstain:
          type: string
          example: '0.0000000000'
        no:
          type: string
          example: '0.0000000000'
        no_with_veto:
          type: string
          example: '0.0000000000'
    Vote:
      type: object
      properties:
        voter:
          type: string
        proposal_id:
          type: string
        option:
          type: string
    Validator:
      type: object
      properties:
        operator_address:
          $ref: '#/components/schemas/ValidatorAddress'
        consensus_pubkey:
          type: string
          example: secretvalconspub1zcjduepq0vu2zgkgk49efa0nqwzndanq5m4c7pa3u4apz4g2r9gspqg6g9cs3k9cuf
        jailed:
          type: boolean
        status:
          type: integer
        tokens:
          type: string
        delegator_shares:
          type: string
        description:
          type: object
          properties:
            moniker:
              type: string
            identity:
              type: string
            website:
              type: string
            security_contact:
              type: string
            details:
              type: string
        bond_height:
          type: string
          example: '0'
        bond_intra_tx_counter:
          type: integer
          example: 0
        unbonding_height:
          type: string
          example: '0'
        unbonding_time:
          type: string
          example: '1970-01-01T00:00:00Z'
        commission:
          type: object
          properties:
            rate:
              type: string
              example: '0'
            max_rate:
              type: string
              example: '0'
            max_change_rate:
              type: string
              example: '0'
            update_time:
              type: string
              example: '1970-01-01T00:00:00Z'
    Delegation:
      type: object
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        shares:
          type: string
        balance:
          $ref: '#/components/schemas/Coin'
    UnbondingDelegationPair:
      type: object
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/UnbondingEntries'
    UnbondingEntries:
      type: object
      properties:
        initial_balance:
          type: string
        balance:
          type: string
        creation_height:
          type: string
        min_time:
          type: string
    UnbondingDelegation:
      type: object
      properties:
        delegator_address:
          type: string
        validator_address:
          type: string
        initial_balance:
          type: string
        balance:
          type: string
        creation_height:
          type: integer
        min_time:
          type: integer
    Redelegation:
      type: object
      properties:
        delegator_address:
          type: string
        validator_src_address:
          type: string
        validator_dst_address:
          type: string
        entries:
          type: array
          items:
            $ref: '#/components/schemas/Redelegation'
    RedelegationEntry:
      type: object
      properties:
        creation_height:
          type: integer
        completion_time:
          type: integer
        initial_balance:
          type: string
        balance:
          type: string
        shares_dst:
          type: string
    ValidatorDistInfo:
      type: object
      properties:
        operator_address:
          $ref: '#/components/schemas/ValidatorAddress'
        self_bond_rewards:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        val_commission:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
    PublicKey:
      type: object
      properties:
        type:
          type: string
        value:
          type: string
    SigningInfo:
      type: object
      properties:
        start_height:
          type: string
        index_offset:
          type: string
        jailed_until:
          type: string
        missed_blocks_counter:
          type: string
    ParamChange:
      type: object
      properties:
        subspace:
          type: string
          example: staking
        key:
          type: string
          example: MaxValidators
        subkey:
          type: string
          example: ''
        value:
          type: object
    Supply:
      type: object
      properties:
        total:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
    IBCValidator:
      type: object
      properties:
        address:
          $ref: '#/components/schemas/ValidatorAddress'
        pub_key:
          type: object
          properties:
            type:
              type: string
            value:
              type: string
        voting_power:
          type: string
          example: '1000'
        proposer_priority:
          type: string
          example: '1000'
    ConsensusState:
      type: object
      properties:
        chain_id:
          type: string
        height:
          type: integer
        root:
          $ref: '#/components/schemas/Root'
        next_validator_set:
          $ref: '#/components/schemas/ValidatorSet'
    Root:
      type: object
      properties:
        type:
          type: string
        value:
          type: object
          properties:
            hash:
              type: string
    Prefix:
      type: object
      properties:
        type:
          type: string
        value:
          type: object
          properties:
            key_prefix:
              type: string
    ValidatorSet:
      type: object
      properties:
        validators:
          type: array
          items:
            $ref: '#/components/schemas/IBCValidator'
        proposer:
          $ref: '#/components/schemas/IBCValidator'
    ClientState:
      type: object
      properties:
        id:
          type: string
        frozen:
          type: boolean
    Proof:
      type: object
      properties:
        proof:
          type: object
          properties:
            ops:
              type: array
              items:
                type: object
                properties:
                  type:
                    type: string
                  key:
                    type: string
                  data:
                    type: string
    Commit:
      type: object
      properties:
        block_id:
          $ref: '#/components/schemas/BlockID'
        precommits:
          type: array
          items:
            type: object
            properties:
              validator_address:
                type: string
              validator_index:
                type: string
                example: '0'
              height:
                type: string
                example: '0'
              round:
                type: string
                example: '0'
              timestamp:
                type: string
                example: '2017-12-30T04:53:09.287+00:00'
              type:
                type: number
                example: 2
              block_id:
                $ref: '#/components/schemas/BlockID'
              signature:
                type: string
                example: 7uTC74QlknqYWEwg7Vn6M8Om7FuZ0EO4bjvuj6rwH1mTUJrRuMMZvAAqT9VjNgP0RA/TDp6u/92AqrZfXJSpBQ==
    SignedHeader:
      type: object
      properties:
        header:
          $ref: '#/components/schemas/BlockHeader'
        commit:
          $ref: '#/components/schemas/Commit'
    Header:
      type: object
      properties:
        type:
          type: string
        value:
          type: object
          properties:
            SignedHeader:
              $ref: '#/components/schemas/SignedHeader'
            validator_set:
              $ref: '#/components/schemas/ValidatorSet'
            next_validator_set:
              $ref: '#/components/schemas/ValidatorSet'
    Node_infoGet200ApplicationJsonResponse:
      type: object
      properties:
        application_version:
          properties:
            build_tags:
              type: string
            client_name:
              type: string
            commit:
              type: string
            go:
              type: string
            name:
              type: string
            server_name:
              type: string
            version:
              type: string
        node_info:
          properties:
            id:
              type: string
            moniker:
              type: string
              example: validator-name
            protocol_version:
              properties:
                p2p:
                  type: string
                  example: '7'
                block:
                  type: string
                  example: '10'
                app:
                  type: string
                  example: '0'
            network:
              type: string
              example: secret-3
            channels:
              type: string
            listen_addr:
              type: string
              example: 192.168.56.1:26656
            version:
              type: string
              description: Tendermint version
              example: 0.15.0
            other:
              type: object
              properties:
                tx_index:
                  type: string
                  example: on
                rpc_address:
                  type: string
                  example: tcp://0.0.0.0:26657
              description: more information on versions
    SyncingGet200ApplicationJsonResponse:
      type: object
      properties:
        syncing:
          type: boolean
    ValidatorsetsLatestGet200ApplicationJsonResponse:
      type: object
      properties:
        block_height:
          type: string
        validators:
          type: array
          items:
            $ref: '#/components/schemas/TendermintValidator'
    ValidatorsetsHeightGet200ApplicationJsonResponse:
      type: object
      properties:
        block_height:
          type: string
        validators:
          type: array
          items:
            $ref: '#/components/schemas/TendermintValidator'
    TxBroadcast:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/StdTx'
        mode:
          type: string
          example: block
    Tx:
      type: object
      properties:
        tx:
          $ref: '#/components/schemas/StdTx'
    TxsEncodePost200ApplicationJsonResponse:
      type: object
      properties:
        tx:
          type: string
          example: The base64-encoded Amino-serialized bytes for the tx
    Tx-1:
      type: object
      properties:
        tx:
          type: string
          example: SvBiXe4KPqijYZoKFFHEzJ8c2HPAfv2EFUcIhx0yPagwEhTy0vPA+GGhCEslKXa4Af0uB+mfShoMCgVzdGFrZRIDMTAwEgQQwJoM
    CoinArray:
      type: array
      items:
        $ref: '#/components/schemas/Coin'
    Account:
      type: object
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        amount:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
    AuthAccountsAddressGet200ApplicationJsonResponse:
      type: object
      properties:
        type:
          type: string
        value:
          type: object
          properties:
            account_number:
              type: string
            address:
              type: string
            coins:
              type: array
              items:
                $ref: '#/components/schemas/Coin'
            public_key:
              $ref: '#/components/schemas/PublicKey'
            sequence:
              type: string
    DelegationArray:
      type: array
      items:
        $ref: '#/components/schemas/Delegation'
    Delegation-1:
      type: object
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        delegator_address:
          $ref: '#/components/schemas/Address'
        validator_address:
          $ref: '#/components/schemas/ValidatorAddress'
        delegation:
          $ref: '#/components/schemas/Coin'
    UnbondingDelegationArray:
      type: array
      items:
        $ref: '#/components/schemas/UnbondingDelegation'
    Delegation-2:
      type: object
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        delegator_address:
          $ref: '#/components/schemas/Address'
        validator_address:
          $ref: '#/components/schemas/ValidatorAddress'
        shares:
          type: string
          example: '100'
    RedelegationArray:
      type: array
      items:
        $ref: '#/components/schemas/Redelegation'
    Delegation-3:
      type: object
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        delegator_address:
          $ref: '#/components/schemas/Address'
        validator_src_addressess:
          $ref: '#/components/schemas/ValidatorAddress'
        validator_dst_address:
          $ref: '#/components/schemas/ValidatorAddress'
        shares:
          type: string
          example: '100'
    ValidatorArray:
      type: array
      items:
        $ref: '#/components/schemas/Validator'
    StakingPoolGet200ApplicationJsonResponse:
      type: object
      properties:
        loose_tokens:
          type: string
        bonded_tokens:
          type: string
        inflation_last_time:
          type: string
        inflation:
          type: string
        date_last_commission_reset:
          type: string
        prev_bonded_shares:
          type: string
    StakingParametersGet200ApplicationJsonResponse:
      type: object
      properties:
        inflation_rate_change:
          type: string
        inflation_max:
          type: string
        inflation_min:
          type: string
        goal_bonded:
          type: string
        unbonding_time:
          type: string
        max_validators:
          type: integer
        bond_denom:
          type: string
    SigningInfoArray:
      type: array
      items:
        $ref: '#/components/schemas/SigningInfo'
    UnjailBody:
      type: object
      properties:
        base_req:
          $ref: '#/components/schemas/StdTx'
    SlashingParametersGet200ApplicationJsonResponse:
      type: object
      properties:
        max_evidence_age:
          type: string
        signed_blocks_window:
          type: string
        min_signed_per_window:
          type: string
        double_sign_unbond_duration:
          type: string
        downtime_unbond_duration:
          type: string
        slash_fraction_double_sign:
          type: string
        slash_fraction_downtime:
          type: string
    Post_proposal_body:
      type: object
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        title:
          type: string
        description:
          type: string
        proposal_type:
          type: string
          example: text
        proposer:
          $ref: '#/components/schemas/Address'
        initial_deposit:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
    TextProposalArray:
      type: array
      items:
        $ref: '#/components/schemas/TextProposal'
    Post_proposal_body-1:
      type: object
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        title:
          type: string
          x-example: Param Change
        description:
          type: string
          x-example: Update max validators
        proposer:
          $ref: '#/components/schemas/Address'
        deposit:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        changes:
          type: array
          items:
            $ref: '#/components/schemas/ParamChange'
    DepositArray:
      type: array
      items:
        $ref: '#/components/schemas/Deposit'
    Post_deposit_body:
      type: object
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        depositor:
          $ref: '#/components/schemas/Address'
        amount:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
    VoteArray:
      type: array
      items:
        $ref: '#/components/schemas/Vote'
    Post_vote_body:
      type: object
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        voter:
          $ref: '#/components/schemas/Address'
        option:
          type: string
          example: yes
    GovParametersDepositGet200ApplicationJsonResponse:
      type: object
      properties:
        min_deposit:
          type: array
          items:
            $ref: '#/components/schemas/Coin'
        max_deposit_period:
          type: string
          example: '86400000000000'
    GovParametersTallyingGet200ApplicationJsonResponse:
      properties:
        threshold:
          type: string
          example: '0.5000000000'
        veto:
          type: string
          example: '0.3340000000'
        governance_penalty:
          type: string
          example: '0.0100000000'
    GovParametersVotingGet200ApplicationJsonResponse:
      properties:
        voting_period:
          type: string
          example: '86400000000000'
    Withdraw-request-body:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
    Withdraw-request-body-1:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
    Withdraw-request-body-2:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
        withdraw_address:
          $ref: '#/components/schemas/Address'
    Withdraw-request-body-3:
      properties:
        base_req:
          $ref: '#/components/schemas/BaseReq'
    DistributionParametersGet200ApplicationJsonResponse:
      properties:
        base_proposer_reward:
          type: string
        bonus_proposer_reward:
          type: string
        community_tax:
          type: string
    MintingParametersGet200ApplicationJsonResponse:
      properties:
        mint_denom:
          type: string
        inflation_rate_change:
          type: string
        inflation_max:
          type: string
        inflation_min:
          type: string
        goal_bonded:
          type: string
        blocks_per_year:
          type: string
    MintingInflationGet200ApplicationJsonResponse:
      type: string
    MintingAnnual-provisionsGet200ApplicationJsonResponse:
      type: string
    SupplyTotalDenominationGet200ApplicationJsonResponse:
      type: string
    WasmCodeGet200ApplicationJsonResponse:
      type: object
      properties:
        height:
          type: string
        result:
          $ref: '#/components/schemas/ListCodeReponse'
    WasmCodeCodeIDGet200ApplicationJsonResponse:
      type: object
      properties:
        height:
          type: string
        result:
          $ref: '#/components/schemas/CodeInfo'
    WasmCodeCodeIDContractsGet200ApplicationJsonResponse:
      type: object
      properties:
        height:
          type: string
        result:
          $ref: '#/components/schemas/CodeIdContracts'
    WasmContractContractAddressCode-hashGet200ApplicationJsonResponse:
      type: object
      properties:
        height:
          type: string
        result:
          type: string
    WasmContractContractAddressQueryQueryGet200ApplicationJsonResponse:
      type: object
      properties:
        height:
          type: string
        result:
          type: object
          properties:
            key:
              type: string
            value:
              type: string
    WasmCodeCodeIDHashGet200ApplicationJsonResponse:
      type: object
      properties:
        height:
          type: string
        result:
          $ref: '#/components/schemas/CodeHash'
tags:
  - name: Transactions
    description: 'Search, encode, or broadcast transactions.'
  - name: Tendermint RPC
    description: 'Tendermint APIs, such as query blocks, transactions and validatorset'
  - name: Auth
    description: Authenticate accounts
  - name: Bank
    description: Create and broadcast transactions
  - name: Staking
    description: Stake module APIs
  - name: Governance
    description: Governance module APIs
  - name: Slashing
    description: Slashing module APIs
  - name: Distribution
    description: Fee distribution module APIs
  - name: Supply
    description: Supply module APIs
  - name: version
  - name: Mint
    description: Minting module APIs
  - name: Misc
    description: Query app version
  - name: Wasm
    description: Wasm stuff
  - name: Reg
    description: Registration & key exchange
